name: Build and release on main

on:
  push:
    branches:
      - main

env:
  REGISTRY_USER: tempest-concorde
  IMAGE_REGISTRY: quay.io
  IMAGE: fedora-bootc-rpi5

jobs:
  testbuild:
    runs-on: ubuntu-24.04-arm
    container:
      image: registry.access.redhat.com/ubi9/ubi
      options: --privileged    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
    - name: Get container tools in UBI builder
      run: dnf -y install podman buildah skopeo make wget git

    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Workaround open podman-login action issue
      env:
        auth: "{ \"auths\": {} }"
      run: |
        mkdir -p $HOME/.docker
        echo $auth > $HOME/.docker/config.json
  
    - name: Log in to Quay.io
      uses: redhat-actions/podman-login@v1
      with:
        username: ${{ secrets.QUAY_USERNAME }}
        password: ${{ secrets.QUAY_TOKEN }}
        registry: ${{ env.IMAGE_REGISTRY }}
        auth_file_path: /run/containers/0/auth.json

    - name: Build Image
      uses: redhat-actions/buildah-build@v2
      with:
        image: "quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}"
        tags: latest ${{ github.sha }}
        platforms: linux/arm64
        containerfiles: |
         ./Containerfile

    - name: Test container lint
      run: |
        podman run --rm --platform=linux/arm64 quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}:${{ github.sha }} bootc container lint

    - name: Test container functionality
      run: |
        # Test that required packages are installed
        podman run --rm --platform=linux/arm64 quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}:${{ github.sha }} \
          rpm -q tailscale NetworkManager-wifi podman
        
        # Test that scripts are executable
        podman run --rm --platform=linux/arm64 quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}:${{ github.sha }} \
          test -x /usr/local/bin/wifi-setup.sh
        
        podman run --rm --platform=linux/arm64 quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}:${{ github.sha }} \
          test -x /usr/local/bin/tailscale-setup.sh
        
        # Test that node-exporter container config exists
        podman run --rm --platform=linux/arm64 quay.io/${{ env.REGISTRY_USER }}/${{ env.IMAGE }}:${{ github.sha }} \
          test -f /etc/containers/systemd/node-exporter.container

  release:
    runs-on: ubuntu-latest
    needs: testbuild
    permissions:
      contents: write
      packages: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Semantic Release
      id: release
      run: npx semantic-release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
